{{- $deploymentName := .Values.deploymentName -}}
{{ range $deploymentId, $deploymentConfig := .Values.deploymentCustomAttrs }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $deploymentName }}-{{ $deploymentConfig.deploymentNameSuffix}}"
  namespace: {{ $.Values.namespace }}
spec:
  replicas: {{ $deploymentConfig.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "20%"
      maxUnavailable: "10%"
  selector:
    matchLabels:
      name: "{{ $deploymentName }}"
  template:
    metadata:
      labels:
        name: "{{ $deploymentName }}"
    spec:
      containers:
        - name: {{ $deploymentConfig.containerName }}
          image: "{{ $.Values.image }}"
          # image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - protocol: TCP
              name: pythonport
              containerPort: 9999
          livenessProbe:
            initialDelaySeconds: 5
            tcpSocket:
              port: pythonport
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: "/"
              port: pythonport
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            initialDelaySeconds: 5
            failureThreshold: 2
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{ end }}
